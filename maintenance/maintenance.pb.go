// Code generated by protoc-gen-gogo.
// source: maintenance/maintenance.proto
// DO NOT EDIT!

/*
	Package maintenance is a generated protocol buffer package.

	It is generated from these files:
		maintenance/maintenance.proto

	It has these top-level messages:
		Window
		Schedule
		ClusterStatus
*/
package maintenance

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import mesos "code.uber.internal/infra/mesos-go"
import mesos_allocator "code.uber.internal/infra/mesos-go/allocator"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// *
// A set of machines scheduled to go into maintenance
// in the same `unavailability`.
type Window struct {
	// Machines affected by this maintenance window.
	MachineIds []*mesos.MachineID `protobuf:"bytes,1,rep,name=machine_ids,json=machineIds" json:"machine_ids,omitempty"`
	// Interval during which this set of machines is expected to be down.
	Unavailability   *mesos.Unavailability `protobuf:"bytes,2,req,name=unavailability" json:"unavailability,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Window) Reset()                    { *m = Window{} }
func (m *Window) String() string            { return proto.CompactTextString(m) }
func (*Window) ProtoMessage()               {}
func (*Window) Descriptor() ([]byte, []int) { return fileDescriptorMaintenance, []int{0} }

func (m *Window) GetMachineIds() []*mesos.MachineID {
	if m != nil {
		return m.MachineIds
	}
	return nil
}

func (m *Window) GetUnavailability() *mesos.Unavailability {
	if m != nil {
		return m.Unavailability
	}
	return nil
}

// *
// A list of maintenance windows.
// For example, this may represent a rolling restart of agents.
type Schedule struct {
	Windows          []*Window `protobuf:"bytes,1,rep,name=windows" json:"windows,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptorMaintenance, []int{1} }

func (m *Schedule) GetWindows() []*Window {
	if m != nil {
		return m.Windows
	}
	return nil
}

// *
// Represents the maintenance status of each machine in the cluster.
// The lists correspond to the `MachineInfo.Mode` enumeration.
type ClusterStatus struct {
	DrainingMachines []*ClusterStatus_DrainingMachine `protobuf:"bytes,1,rep,name=draining_machines,json=drainingMachines" json:"draining_machines,omitempty"`
	DownMachines     []*mesos.MachineID               `protobuf:"bytes,2,rep,name=down_machines,json=downMachines" json:"down_machines,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *ClusterStatus) Reset()                    { *m = ClusterStatus{} }
func (m *ClusterStatus) String() string            { return proto.CompactTextString(m) }
func (*ClusterStatus) ProtoMessage()               {}
func (*ClusterStatus) Descriptor() ([]byte, []int) { return fileDescriptorMaintenance, []int{2} }

func (m *ClusterStatus) GetDrainingMachines() []*ClusterStatus_DrainingMachine {
	if m != nil {
		return m.DrainingMachines
	}
	return nil
}

func (m *ClusterStatus) GetDownMachines() []*mesos.MachineID {
	if m != nil {
		return m.DownMachines
	}
	return nil
}

type ClusterStatus_DrainingMachine struct {
	Id *mesos.MachineID `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// A list of the most recent responses to inverse offers from frameworks
	// running on this draining machine.
	Statuses         []*mesos_allocator.InverseOfferStatus `protobuf:"bytes,2,rep,name=statuses" json:"statuses,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *ClusterStatus_DrainingMachine) Reset()         { *m = ClusterStatus_DrainingMachine{} }
func (m *ClusterStatus_DrainingMachine) String() string { return proto.CompactTextString(m) }
func (*ClusterStatus_DrainingMachine) ProtoMessage()    {}
func (*ClusterStatus_DrainingMachine) Descriptor() ([]byte, []int) {
	return fileDescriptorMaintenance, []int{2, 0}
}

func (m *ClusterStatus_DrainingMachine) GetId() *mesos.MachineID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClusterStatus_DrainingMachine) GetStatuses() []*mesos_allocator.InverseOfferStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func init() {
	proto.RegisterType((*Window)(nil), "mesos.maintenance.Window")
	proto.RegisterType((*Schedule)(nil), "mesos.maintenance.Schedule")
	proto.RegisterType((*ClusterStatus)(nil), "mesos.maintenance.ClusterStatus")
	proto.RegisterType((*ClusterStatus_DrainingMachine)(nil), "mesos.maintenance.ClusterStatus.DrainingMachine")
}

func init() { proto.RegisterFile("maintenance/maintenance.proto", fileDescriptorMaintenance) }

var fileDescriptorMaintenance = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x51, 0x4d, 0x4b, 0x2b, 0x31,
	0x14, 0xa5, 0xf3, 0xe0, 0xbd, 0x92, 0x79, 0xd5, 0x36, 0x20, 0xd4, 0x82, 0x50, 0xea, 0xa6, 0x9b,
	0x66, 0xb4, 0xe2, 0x4a, 0xa4, 0xa0, 0xdd, 0x74, 0x21, 0xc2, 0x14, 0x11, 0x04, 0x29, 0x99, 0x49,
	0x66, 0x1a, 0xc8, 0x24, 0x92, 0x8f, 0x16, 0xfd, 0x2b, 0xfe, 0x59, 0x69, 0x26, 0xd3, 0x4f, 0xc5,
	0xdd, 0xc9, 0xbd, 0xe7, 0x9c, 0x7b, 0xee, 0x0d, 0x38, 0x2b, 0x30, 0x13, 0x86, 0x0a, 0x2c, 0x52,
	0x1a, 0x6d, 0x61, 0xf4, 0xa6, 0xa4, 0x91, 0xb0, 0x55, 0x50, 0x2d, 0x35, 0xda, 0x6a, 0x74, 0x06,
	0xa9, 0x24, 0x14, 0xd9, 0x84, 0x2a, 0xb4, 0x2a, 0x2a, 0x81, 0x79, 0xc4, 0x44, 0xa6, 0x70, 0xe4,
	0xb8, 0x83, 0x5c, 0x96, 0xa0, 0x74, 0xe8, 0xdc, 0xfc, 0x4e, 0xc7, 0x9c, 0xcb, 0x14, 0x1b, 0xa9,
	0x36, 0xc8, 0x8b, 0x07, 0x39, 0x33, 0x73, 0x9b, 0xa0, 0x54, 0x16, 0x51, 0x2e, 0x73, 0x19, 0xb9,
	0x72, 0x62, 0x33, 0xf7, 0x72, 0x0f, 0x87, 0x4a, 0x7a, 0xef, 0x03, 0xfc, 0x7d, 0x66, 0x82, 0xc8,
	0x25, 0xbc, 0x04, 0x61, 0x81, 0xd3, 0x39, 0x13, 0x74, 0xc6, 0x88, 0x6e, 0xd7, 0xba, 0x7f, 0xfa,
	0xe1, 0xb0, 0x89, 0xca, 0x60, 0x0f, 0x65, 0x67, 0x32, 0x8e, 0x81, 0x27, 0x4d, 0x88, 0x86, 0xb7,
	0xe0, 0xc8, 0x0a, 0xbc, 0xc0, 0x8c, 0xe3, 0x84, 0x71, 0x66, 0xde, 0xdb, 0x41, 0x37, 0xe8, 0x87,
	0xc3, 0x13, 0xaf, 0x7a, 0xda, 0x69, 0xc6, 0x7b, 0xe4, 0xde, 0x08, 0xd4, 0xa7, 0xe9, 0x9c, 0x12,
	0xcb, 0x29, 0xbc, 0x02, 0xff, 0x96, 0x2e, 0x47, 0x35, 0xf9, 0x14, 0x1d, 0xdc, 0x11, 0x95, 0x49,
	0xe3, 0x8a, 0xd9, 0xfb, 0x0c, 0x40, 0xe3, 0x9e, 0x5b, 0x6d, 0xa8, 0x9a, 0x1a, 0x6c, 0xac, 0x86,
	0xaf, 0xa0, 0x45, 0x14, 0x66, 0x82, 0x89, 0x7c, 0xe6, 0x83, 0x56, 0x86, 0x17, 0xdf, 0x18, 0xee,
	0x88, 0xd1, 0xd8, 0x2b, 0xfd, 0xb2, 0x71, 0x93, 0xec, 0x16, 0x34, 0xbc, 0x06, 0x0d, 0x22, 0x97,
	0x62, 0x63, 0x1d, 0xfc, 0x70, 0xa5, 0xff, 0x2b, 0x5a, 0x25, 0xeb, 0x18, 0x70, 0xbc, 0xe7, 0x0d,
	0xbb, 0x20, 0x60, 0xa4, 0x5d, 0x73, 0xe7, 0x3a, 0x94, 0x07, 0x8c, 0xc0, 0x11, 0xa8, 0x6b, 0x97,
	0x6b, 0x3d, 0xe6, 0xdc, 0xf3, 0x36, 0x5f, 0x3e, 0x11, 0x0b, 0xaa, 0x34, 0x7d, 0xcc, 0xb2, 0x6a,
	0x89, 0x78, 0x2d, 0xba, 0x6b, 0xbc, 0x84, 0x5b, 0xbb, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x03,
	0x95, 0xb6, 0x65, 0xb7, 0x02, 0x00, 0x00,
}
